/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;


import java.awt.Color;
import java.awt.Font;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


public class Index extends javax.swing.JFrame {

    private static Bonde innloggetBonde;
    private String[] args;
    private static double tempLat;
    private static double tempLng;
    private static Object[][] data;
    private static String[] columnNames;
    private static Object[][] data2;
    private static String[] columnNames2;
    private static Object[][] data3;
    private static String[] columnNames3;
    private static TableRowSorter<TableModel> sorter;
    private static Simulation simulator;
    private static ArrayList<Sau> sheeps;

    /**
     * Creates new form Index
     */
    public Index(int userID) {


        initComponents();
        Bonde bonde = MySQLmetoder.getFarmer(userID);

        fornavnProfilField1.setText(bonde.getFirstName());
        etternavnProfilField1.setText(bonde.getLastName());
        emailProfilField1.setText(bonde.getEmail());
        buddyField.setText(bonde.getBuddyEmail());
        phonenumberProfil.setText("" + bonde.getPhonenumber());
        buddyPhoneField.setText("" + bonde.getBuddyPhonenumber());

        if (bonde == null) {
            JOptionPane.showMessageDialog(this, "Connection lost.");
            System.exit(0);
        }

        innloggetBonde = bonde;

        tempLat = innloggetBonde.getLatitude();
        tempLng = innloggetBonde.getLongitude();

        welcomeLabel.setText("Velkommen, " + innloggetBonde.getFirstName() + " " + innloggetBonde.getLastName() + "!");



        // Setter ID og bondenavn i "Sau" - fanen
        String bondeNavn = innloggetBonde.getFirstName() + " " + innloggetBonde.getLastName();

        sauBondeLabelVariable.setText(bondeNavn);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simulereJBox = new javax.swing.JCheckBox();
        logoutButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        fornavnProfilField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        etternavnProfilField1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        emailProfilField1 = new javax.swing.JTextField();
        updateProfileButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        passwordProfilField = new javax.swing.JPasswordField();
        updatePasswordButton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        chkBox_buddy = new javax.swing.JCheckBox();
        buddyField = new javax.swing.JTextField();
        changePosButton = new javax.swing.JButton();
        changePosBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        phonenumberProfil = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        buddyPhoneField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        sauBondeLabel = new javax.swing.JLabel();
        sauBondeLabelVariable = new javax.swing.JLabel();
        sheepName = new javax.swing.JTextField();
        sheepAge = new javax.swing.JTextField();
        sheepWeight = new javax.swing.JTextField();
        saveSheep = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_sheep = new javax.swing.JTable();
        filterText = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        sokIDLabel = new javax.swing.JLabel();
        sokNameLabel = new javax.swing.JLabel();
        sokWeightLabel = new javax.swing.JLabel();
        sokBdayLabel = new javax.swing.JLabel();
        sokLatitudeLabel = new javax.swing.JLabel();
        sokLongditudeLabel = new javax.swing.JLabel();
        sokHealthLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sokIDLabelVariable = new javax.swing.JLabel();
        sokNameLabelVariable = new javax.swing.JLabel();
        sokWeightLabelVariable = new javax.swing.JLabel();
        sokBdayLabelVariable = new javax.swing.JLabel();
        sokLatitudeLabelVariable = new javax.swing.JLabel();
        sokLongditudeLabelVariable = new javax.swing.JLabel();
        sokEndreButton = new javax.swing.JButton();
        sokHealthLabelVariable = new javax.swing.JLabel();
        sokValgtSauLabel = new javax.swing.JLabel();
        sokVisKartButton = new javax.swing.JButton();
        deleteSheepButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        gpsTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        LogTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        welcomeLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SheepTracker v0.1");
        setFocusable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        simulereJBox.setText("Aktivere simulering");
        simulereJBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulereJBoxActionPerformed(evt);
            }
        });
        getContentPane().add(simulereJBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 130, -1));

        logoutButton.setText("Logg ut");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        jTabbedPane1.setRequestFocusEnabled(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Min profil", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 153, 255)));
        jPanel4.setPreferredSize(new java.awt.Dimension(527, 365));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("Fornavn");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 18, -1, -1));
        jPanel4.add(fornavnProfilField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 41, 340, -1));

        jLabel13.setText("Etternavn");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 81, -1, -1));
        jPanel4.add(etternavnProfilField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 104, 340, -1));

        jLabel14.setText("Epost");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        jPanel4.add(emailProfilField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 200, -1));

        updateProfileButton1.setText("Oppdater profil");
        updateProfileButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProfileButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(updateProfileButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        jLabel1.setText("Passord");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        jPanel4.add(passwordProfilField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 340, -1));

        updatePasswordButton.setText("Endre passord");
        updatePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePasswordButtonActionPerformed(evt);
            }
        });
        jPanel4.add(updatePasswordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, -1));

        jLabel18.setText("Endre kontaktinfo til reservebonde?");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, 20));

        chkBox_buddy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBox_buddyActionPerformed(evt);
            }
        });
        jPanel4.add(chkBox_buddy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 210, -1));

        buddyField.setEnabled(false);
        jPanel4.add(buddyField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 210, -1));

        changePosButton.setText("Endre posisjon");
        changePosButton.setEnabled(false);
        changePosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePosButtonActionPerformed(evt);
            }
        });
        jPanel4.add(changePosButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        changePosBox.setText("  Endre posisjon");
        changePosBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePosBoxActionPerformed(evt);
            }
        });
        jPanel4.add(changePosBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Sheep1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 390, 330));

        jLabel9.setText("Mobilnummer");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));
        jPanel4.add(phonenumberProfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 130, -1));

        jLabel10.setText("Epost");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        buddyPhoneField.setEnabled(false);
        buddyPhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buddyPhoneFieldActionPerformed(evt);
            }
        });
        jPanel4.add(buddyPhoneField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 110, -1));

        jLabel11.setText("Mobilnummer");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, -1, -1));

        jTabbedPane1.addTab("Min profil", jPanel4);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sauBondeLabel.setText("Bonde:");
        jPanel6.add(sauBondeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 25, -1, -1));

        sauBondeLabelVariable.setText("jLabel8");
        jPanel6.add(sauBondeLabelVariable, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 25, -1, -1));

        sheepName.setText("Skriv inn navn på sau");
        jPanel6.add(sheepName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 322, -1));

        sheepAge.setText("Fødselsår til sau på format YYYY");
        sheepAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sheepAgeActionPerformed(evt);
            }
        });
        jPanel6.add(sheepAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 322, -1));

        sheepWeight.setText("Vekt til sau gitt som hel- eller desimaltall");
        jPanel6.add(sheepWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 322, -1));

        saveSheep.setText("Lagre");
        saveSheep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSheepActionPerformed(evt);
            }
        });
        jPanel6.add(saveSheep, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Sheep1.png"))); // NOI18N
        jLabel3.setText("jLabel2");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 390, 330));

        jLabel5.setText("Navn:");
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel7.setText("Fødselsår:");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel8.setText("Vekt:");
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jTabbedPane1.addTab("Legg til en sau", jPanel6);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl_sheep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Navn", "Vekt"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_sheep.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_sheep.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbl_sheep);
        tbl_sheep.getColumnModel().getColumn(0).setResizable(false);
        tbl_sheep.getColumnModel().getColumn(1).setResizable(false);
        tbl_sheep.getColumnModel().getColumn(2).setResizable(false);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 366, 380));

        filterText.setText("Søk på navn");
        filterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterTextActionPerformed(evt);
            }
        });
        jPanel3.add(filterText, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 20, 242, -1));

        sokIDLabel.setText("ID:");

        sokNameLabel.setText("Navn:");

        sokWeightLabel.setText("Vekt:");

        sokBdayLabel.setText("Alder:");

        sokLatitudeLabel.setText("Breddegrad:");

        sokLongditudeLabel.setText("Lengdegrad:");

        sokHealthLabel.setText("Helsetilstand:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sokIDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokWeightLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokBdayLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokLatitudeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokLongditudeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sokHealthLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(sokIDLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokWeightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokBdayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sokHealthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokLatitudeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokLongditudeLabel))
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 83, -1, -1));

        sokIDLabelVariable.setText(" ");

        sokNameLabelVariable.setText(" ");

        sokWeightLabelVariable.setText(" ");

        sokBdayLabelVariable.setText(" ");

        sokLatitudeLabelVariable.setText(" ");

        sokLongditudeLabelVariable.setText(" ");

        sokEndreButton.setText("Endre");
        sokEndreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokEndreButtonActionPerformed(evt);
            }
        });

        sokHealthLabelVariable.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sokIDLabelVariable)
                    .addComponent(sokNameLabelVariable)
                    .addComponent(sokBdayLabelVariable)
                    .addComponent(sokLatitudeLabelVariable)
                    .addComponent(sokLongditudeLabelVariable)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sokWeightLabelVariable)
                        .addGap(18, 18, 18)
                        .addComponent(sokEndreButton))
                    .addComponent(sokHealthLabelVariable))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(sokIDLabelVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokNameLabelVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sokWeightLabelVariable)
                    .addComponent(sokEndreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokBdayLabelVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokHealthLabelVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sokLatitudeLabelVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokLongditudeLabelVariable))
        );

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 83, -1, -1));

        sokValgtSauLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sokValgtSauLabel.setText("Valgt sau");
        jPanel3.add(sokValgtSauLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 43, -1, -1));

        sokVisKartButton.setText("Vis på kart");
        sokVisKartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokVisKartButtonActionPerformed(evt);
            }
        });
        jPanel3.add(sokVisKartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(504, 250, 197, -1));

        deleteSheepButton.setText("Slett sau");
        deleteSheepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSheepButtonActionPerformed(evt);
            }
        });
        jPanel3.add(deleteSheepButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 17, -1, -1));

        gpsTable.setAutoCreateRowSorter(true);
        gpsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dato"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gpsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(gpsTable);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 216, 150));

        jTabbedPane1.addTab("Søk etter sauer", jPanel3);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        LogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Melding"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        LogTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(LogTable);
        LogTable.getColumnModel().getColumn(0).setResizable(false);
        LogTable.getColumnModel().getColumn(0).setPreferredWidth(350);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 561, 402));

        jButton1.setText("Slett logg");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(585, 13, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/sheep2.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 280, 630));

        jTabbedPane1.addTab("Logg", jPanel5);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 95, 741, 460));

        jButton2.setText("Vis sauer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 10, 80, -1));

        welcomeLabel.setName(""); // NOI18N
        getContentPane().add(welcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 250, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/grass2.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, -70, 700, -1));

        setSize(new java.awt.Dimension(770, 599));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    //Metode som kjøres når logout-knappen trykkes
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        if(simulereJBox.isSelected()){
            simulator.runSheepSimulation(false);
            simulereJBox.setSelected(false);    
        }
        Launch backToLaunch = new Launch();
        backToLaunch.setVisible(true);
        this.dispose();
        Kart.lat = 65.403445;
        Kart.lng = 14.194336;
        

    }//GEN-LAST:event_logoutButtonActionPerformed

    
    //Lager nytt JPasswordChange-vindu 
    private void updatePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePasswordButtonActionPerformed
        JPasswordChange passwordChange = new JPasswordChange(innloggetBonde);
        passwordChange.setVisible(true);

    }//GEN-LAST:event_updatePasswordButtonActionPerformed

    
    //Metode som sjekker input fra alle felt i min profil og oppdaterer profilen
    private void updateProfileButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProfileButton1ActionPerformed
        String fName = fornavnProfilField1.getText();
        String lName = etternavnProfilField1.getText();
        String phone = phonenumberProfil.getText();
        String email = emailProfilField1.getText();
        String pword = passwordProfilField.getText();
        String buddyEmail = innloggetBonde.getBuddyEmail();
        int buddyPhone = innloggetBonde.getBuddyPhonenumber();
        boolean temp = false;
        
        if (buddyField.isEnabled()) {
            buddyEmail = buddyField.getText();
            String tempbuddyPhone = buddyPhoneField.getText();
            
            if(!hasValidPhonenumber(phone, tempbuddyPhone)){
                JOptionPane.showMessageDialog(null, "Telefonnummer må bestå av 8 siffer!", "Error", JOptionPane.ERROR_MESSAGE);
                temp = true;
            }
            else{
                buddyPhone = Integer.parseInt(tempbuddyPhone);
            }
        }

        
        innloggetBonde.setFirstName(fName);
        innloggetBonde.setLastName(lName);
        innloggetBonde.setPhonenumber(Integer.parseInt(phone));
        innloggetBonde.setEmail(email);
        innloggetBonde.setBuddyEmail(buddyEmail);
        innloggetBonde.setBuddyPhonenumber(buddyPhone);
        
        
        if(!buddyField.isEnabled()){
            if(!hasValidPhonenumber(phone, "12345678")){
                JOptionPane.showMessageDialog(null, "Telefonnummer må bestå av 8 siffer!", "Error", JOptionPane.ERROR_MESSAGE);
                temp = true;
            }
            else{
                    innloggetBonde.setPhonenumber(Integer.parseInt(phone));
                }
        }
        if (changePosButton.isEnabled()) {
            innloggetBonde.setLatitude(tempLat);
            innloggetBonde.setLongitude(tempLng);
        }


        if (!pword.isEmpty() && temp == false) {
            try {
                if (innloggetBonde.makeSHA1Hash(pword).equalsIgnoreCase(innloggetBonde.getPassword())) {
                    MySQLmetoder.updateFarmer(innloggetBonde);
                    passwordProfilField.setText("");
                    changePosBox.setSelected(false);
                    chkBox_buddy.setSelected(false);
                    buddyField.setEnabled(false);
                    buddyPhoneField.setEnabled(false);
                    changePosButton.setEnabled(false);
                    welcomeLabel.setText("Velkommen, " + innloggetBonde.getFirstName() + " " + innloggetBonde.getLastName() + "!");
                    sauBondeLabelVariable.setText(innloggetBonde.getFirstName() + " " + innloggetBonde.getLastName());
                    JOptionPane.showMessageDialog(null, "Oppdatert bruker!");
                    MySQLmetoder.insertLog(innloggetBonde.getID(), "Profilen din ble oppdatert");
                    
                    LoadLogTableWithMessages();
                } else {
                    JOptionPane.showMessageDialog(null, "Skriv inn ditt gjeldende passord!");
                }

            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if(pword.isEmpty()){
            JOptionPane.showMessageDialog(null, "Skriv inn passordet ditt!");
        }

    }//GEN-LAST:event_updateProfileButton1ActionPerformed

    
    //Enabler feltene dersom man vil endre på info til reservebonde
    private void chkBox_buddyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBox_buddyActionPerformed
        if (chkBox_buddy.isSelected()) {
            buddyField.setEnabled(true);
            buddyPhoneField.setEnabled(true);
        } else {
            buddyField.setEnabled(false);
            buddyPhoneField.setEnabled(false);
        }
    }//GEN-LAST:event_chkBox_buddyActionPerformed

    
    //Metode som cleaner kartet og laster det med gjeldende gårsposisjon
    private void changePosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePosButtonActionPerformed
        Kart.latSheep = 0.0;
        Kart.lngSheep = 0.0;
        Kart.lat = innloggetBonde.getLatitude();
        Kart.lng = innloggetBonde.getLongitude();
        Kart.data = new ArrayList<>();
        Kart.main(args);
    }//GEN-LAST:event_changePosButtonActionPerformed

    
    //Enabler endre posisjonsknappen
    private void changePosBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePosBoxActionPerformed
        if (changePosBox.isSelected()) {
            changePosButton.setEnabled(true);
        } else {
            changePosButton.setEnabled(false);
        }
    }//GEN-LAST:event_changePosBoxActionPerformed

    
    //Metode som sjekker at alle felt er korrekt utfylt, og oppretter en sau.
    private void saveSheepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSheepActionPerformed
        boolean attack = false;
        double health = 1.0;

        //validate
        if (fieldsEmpty()) {
            JOptionPane.showMessageDialog(null, "Lagring feilet.\nEtt eller flere felt er tomme", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!isDouble(sheepWeight.getText())) {
            JOptionPane.showMessageDialog(null, "Lagring feilet.\nVekten må være et tall", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!hasValidDateFormat(sheepAge.getText())) {
            JOptionPane.showMessageDialog(null, "Lagring feilet.\nFødselsår må være på format YYYY, for eksempe 2013", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (MySQLmetoder.registerSheep(innloggetBonde.getID(), sheepName.getText(), Double.parseDouble(sheepWeight.getText()), health,
                sheepAge.getText(), attack, innloggetBonde.getLatitude(), innloggetBonde.getLongitude())) {

            JOptionPane.showMessageDialog(this, sheepName.getText() + " er nå lagt til i sauedatabasen.");
            MySQLmetoder.insertLog(innloggetBonde.getID(), "Sauen " + sheepName.getText() + " ble lagt til i databasen.");
            LoadLogTableWithMessages();
            clearFields();
            sheeps = MySQLmetoder.getSheepList(innloggetBonde.getID());
            //Her skal bare en ny rad legges til, IKKE loade ny tabell
            if (tbl_sheep.getRowCount() > 0) {
                LoadTableWithSheep();
            } else {
                LoadTableWithSheep();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid details.\nKunne ikke legge til sau.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveSheepActionPerformed

    
    //Metode som kjøres når en valgt sau skal vises på kartet.
    private void sokVisKartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokVisKartButtonActionPerformed
        double lat = Double.parseDouble(sokLatitudeLabelVariable.getText());
        double lng = Double.parseDouble(sokLongditudeLabelVariable.getText());
        Kart.sheepName = sokNameLabelVariable.getText();
        Kart.lat = innloggetBonde.getLatitude();
        Kart.lng = innloggetBonde.getLongitude();
        Kart.latSheep = lat;
        Kart.lngSheep = lng;
        Kart.main(args);


    }//GEN-LAST:event_sokVisKartButtonActionPerformed

    
    //Metode som finner hvilken sau som er valgt og sletter denne fra databasen.
    private void deleteSheepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSheepButtonActionPerformed
        if (tbl_sheep.getSelectedRow() == -1) {
            return;
        } else {
            int rowID = (int) tbl_sheep.getValueAt(tbl_sheep.getSelectedRow(), 0);
            String sheepname = (String) tbl_sheep.getValueAt(tbl_sheep.getSelectedRow(), 1);

            Object[] alternativer = {"Ja, slett sau!", "Nei, ikke slett sau"};

            int sletteSauValg = JOptionPane.showOptionDialog(this, "Sikker på at du vil slette " + sheepname + " fra databasen?",
                    "Slette sau",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    alternativer,
                    alternativer[1]);

            if (sletteSauValg == 0) {
                MySQLmetoder.deleteSheep(innloggetBonde.getID(), rowID);
                MySQLmetoder.deleteGPSLog(rowID);
                DefaultTableModel tabel = (DefaultTableModel) tbl_sheep.getModel();
                tabel.removeRow(tbl_sheep.convertRowIndexToModel(tbl_sheep.getSelectedRow()));
                JOptionPane.showMessageDialog(this, sheepname + " ble slettet!");
                MySQLmetoder.insertLog(innloggetBonde.getID(), "Sauen " + sheepname + " ble slettet fra databasen.");
                LoadLogTableWithMessages();


            } else if (sletteSauValg == 1) {
                JOptionPane.showMessageDialog(this, sheepname + " ble ikke slettet!");
            }
        }
    }//GEN-LAST:event_deleteSheepButtonActionPerformed

    
    
    //Metode som aktiverer/deaktiverer simuleringsscriptet.
    private void simulereJBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulereJBoxActionPerformed

        if (simulereJBox.isSelected()) {
            Object[] options = {"Ja!", "Nei!"};

            int starteSimulering = JOptionPane.showOptionDialog(this, "Sikker på at du vil starte simuleringen?",
                    "Starte?",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);

            if (starteSimulering == 0) {
                simulator = new Simulation(innloggetBonde);
                simulator.runSheepSimulation(true);
            } else if (starteSimulering == 1) {
                simulereJBox.setSelected(false);
            }
        } else {
            Object[] options = {"Ja!", "Nei!"};

            int stoppeSimulering = JOptionPane.showOptionDialog(this, "Sikker på at du vil avslutte simuleringen?",
                    "Stoppe?",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);

            if (stoppeSimulering == 0) {
                simulator.runSheepSimulation(false);
            } else {
                simulereJBox.setSelected(true);
            }
        }
    }//GEN-LAST:event_simulereJBoxActionPerformed

    
    //Metode som lager ny JWeightChange-vindu.
    private void sokEndreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokEndreButtonActionPerformed
        
        JWeightChange weightChange = new JWeightChange(Integer.parseInt(sokIDLabelVariable.getText()),
                sokWeightLabelVariable.getText(), innloggetBonde, sokNameLabelVariable.getText());
        weightChange.setVisible(true);
        
    }//GEN-LAST:event_sokEndreButtonActionPerformed

    
    //Metode som sletter hele loggen til en gitt bruker.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MySQLmetoder.deleteLog(innloggetBonde.getID());
        LoadLogTableWithMessages();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    //Metode som vider alle sauer på kartet.
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Kart.data = new ArrayList<>();
        Kart.data = MySQLmetoder.getSheepList(innloggetBonde.getID());
        Kart.lat = innloggetBonde.getLatitude();
        Kart.lng = innloggetBonde.getLongitude();
        Kart.latSheep = 0.0;
        Kart.lngSheep = 0.0;
        
        Kart.main(args);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void sheepAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sheepAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sheepAgeActionPerformed

    private void filterTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterTextActionPerformed

    private void buddyPhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buddyPhoneFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buddyPhoneFieldActionPerformed
 
    
    //Sjekker om en streng kan konverteres til en double.
    protected static boolean isDouble(String s) {

        try {
            if (s.length() > 0) {
                Double.parseDouble(s);
            }

        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    
    //Sjekker at det ikke finnes tomme felt for registrering av sauer.
    protected boolean fieldsEmpty() {
        if ((sheepName.getText().isEmpty() || sheepName.getText().equals("Skriv inn navn på sau"))
                || (sheepWeight.getText().isEmpty() || sheepWeight.getText().equals("Vekt til sau gitt som hel- eller desimaltall")
                || (sheepAge.getText().isEmpty() || sheepAge.getText().equals("Fødselsår til sau på format YYYY")))) {

            return true;
        }
        return false;
    }

    
    //Sjekker at det er et år som blir fyllt inn av brukern ved registrering av sau
    private boolean hasValidDateFormat(String s){
         try {
            if (s.length() > 0 && s.length() < 4) {
                Double.parseDouble(s);
            }

        } catch (NumberFormatException e) {
            return false;
        }
        if(s.length() == 4){
            return true;
        }
        return false;
    }
    
    
    //Blanker ut alle feltene når en sau er lagt til. 
    protected void clearFields() {
        sheepName.setText("Skriv inn navn på sau");
        sheepAge.setText("Fødselsår til sau på format YYYY");
        sheepWeight.setText("Vekt til sau gitt som hel- eller desimaltall");

        sauBondeLabelVariable.setText(innloggetBonde.getFirstName() + " " + innloggetBonde.getLastName());

    }

    
    //Metode for å laste tabellen med alle sauene.
    protected static void LoadTableWithSheep() {
        sheeps = MySQLmetoder.getSheepList(innloggetBonde.getID());
        int length = sheeps.size();
        columnNames = new String[]{"ID", "Navn", "Vekt"};
        data = new Object[length][3];

        //Populerer tabellen med saueinformasjon
        for (int i = 0; i < length; i++) {
            data[i][0] = sheeps.get(i).getID();
            data[i][1] = sheeps.get(i).getName();
            data[i][2] = sheeps.get(i).getWeight();
        }

        //Denne metoden trengs for å sette at det ikke er lov til å endre celler
        tbl_sheep.setModel(new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        //Her opprettes en et nytt instans av klassen SelectionListener og den globale
        //variabelen sorter blir instansiert med typen RowSorter
        tbl_sheep.getSelectionModel().addListSelectionListener(new SelectionListener());
        sorter = new TableRowSorter<>(tbl_sheep.getModel());
        tbl_sheep.setRowSorter(sorter);

        //Denne metoden brukes for å lytte til endringer i søke-feltet
        filterText.getDocument().addDocumentListener(
                new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                newFilter();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                newFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                newFilter();
            }
        });

    }

    
    //Metode som laster inn logg-tabellen.
    protected static void LoadLogTableWithMessages() {
        ArrayList<String> meldinger = MySQLmetoder.getLog(innloggetBonde.getID());
        int length = meldinger.size();
        columnNames2 = new String[]{"Meldinger"};
        data2 = new Object[length][1];

        //Populerer tabellen med logginfo
        for (int i = 0; i < length; i++) {
            data2[i][0] = meldinger.get(i);
        }

        //Denne metoden trengs for å sette at det ikke er lov til å endre celler
        LogTable.setModel(new DefaultTableModel(data2, columnNames2) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

    }

    //Metoden newFilter() filtrerer ut tekst basert på hva som er skrevet i søkefeltet.
    //Tabellen trenger ikke å populeres på nytt, selve UI-et blir bare malt opp på nytt
    //Dette skaper problemer med rad-indekser, se klassen SelectionListener for løsning
    private static void newFilter() {
        RowFilter<TableModel, Object> rf = null;
        //If current expression doesn't parse, don't update.
        try {
            if (filterText.getText().trim().equals("Søk på navn")) {
                return;
            } else {
                if(filterText.getText().length() > 0){
                    String input = filterText.getText();
                    String firstLetter = input.replaceFirst("" + input.charAt(0), "" + input.toUpperCase().charAt(0));
                    rf = RowFilter.regexFilter(firstLetter, 1);
                }
                
            }
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rf);
    }

    
    //Metode som setter første rad i 'søk på sau' som valgt
    private static void setDefaultSelectedRow() {
        if (tbl_sheep.getRowCount() > 0) {
            tbl_sheep.setRowSelectionInterval(0, 0);
        }
    }
    
    
    //Laster inn verdi for en valgt sau i panelet til høyre i 'søk på sau'.
    private static void paintFieldsBasedOnFocus(final JTextField textField, final String message) {
        final Font unfocusedFont = new Font(textField.getFont().getName(), Font.ITALIC, textField.getFont().getSize());
        final Font focusedFont = new Font(textField.getFont().getName(), Font.PLAIN, textField.getFont().getSize());
        textField.setFont(unfocusedFont);
        textField.setForeground(Color.GRAY);
        textField.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                if (textField.getText().trim().equals("")) {
                    textField.setText(message);
                }
                textField.setFont(unfocusedFont);
                textField.setForeground(Color.GRAY);
            }

            @Override
            public void focusGained(FocusEvent e) {
                if (textField.getText().trim().equals(message)) {
                    textField.setText("");
                }
                textField.setFont(focusedFont);
                textField.setForeground(Color.BLACK);
            }
        });
    }

    
    //Metode som laster inn alt av tabeller og kjører ved innlogging.
    protected static void runTableOnLaunch() {
        LoadTableWithSheep();
        MySQLmetoder.insertLog(innloggetBonde.getID(), "Du logget inn på programmet.");
        LoadLogTableWithMessages();
        setDefaultSelectedRow();
        paintFieldsBasedOnFocus(sheepWeight, "Vekt til sau gitt som hel- eller desimaltall");
        paintFieldsBasedOnFocus(sheepAge, "Fødselsår til sau på format YYYY");
        paintFieldsBasedOnFocus(sheepName, "Skriv inn navn på sau");
        paintFieldsBasedOnFocus(filterText, "Søk på navn");
    }

    
    //Metode for å endre posisjonen til bruker.
    protected static void changePos(double lat, double lng) {
        tempLat = lat;
        tempLng = lng;
    }
    
    
    //Metode for å sjekke etter riktig telefonnummer. 
    private boolean hasValidPhonenumber(String phone, String buddy) {

        try {
            if(chkBox_buddy.isSelected() && phone.length() == 8 && buddy.length() == 8){
                Integer.parseInt(phone);
                Integer.parseInt(buddy);
            }
            else if (phone.length() == 8 && buddy.equals("")) {
                Integer.parseInt(phone);
            }
            else if(phone.length() != 8 || buddy.length() != 8){
                return false;
            }
            
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }
    

    
    //Metode for å laste inn GPSLoggen for en gitt sau.
    protected static void LoadGPSTableWithSheep(int ID) {
        ArrayList<GPSData> gps = MySQLmetoder.getGPSLog(ID);
        int length = gps.size();
        columnNames3 = new String[]{"Posisjonslogg"};
        data3 = new Object[length][1];
        

        //Populerer tabellen med GPS informasjon
        for (int i = 0; i < length; i++) {
            data3[i][0] = "" + gps.get(i).getDate().toString().substring(0, 16) + "                             " 
                    + gps.get(i).getLatitude() + "," + gps.get(i).getLongitude();
            
        }

        //Denne metoden trengs for å sette at det ikke er lov til å endre celler
        gpsTable.setModel(new DefaultTableModel(data3, columnNames3){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        });
        
        //Her opprettes en et nytt instans av klassen SelectionListener2
        gpsTable.getSelectionModel().addListSelectionListener(new SelectionListener2());
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index(0).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable LogTable;
    private javax.swing.JTextField buddyField;
    private javax.swing.JTextField buddyPhoneField;
    private javax.swing.JCheckBox changePosBox;
    private javax.swing.JButton changePosButton;
    private javax.swing.JCheckBox chkBox_buddy;
    private javax.swing.JButton deleteSheepButton;
    public javax.swing.JTextField emailProfilField1;
    public javax.swing.JTextField etternavnProfilField1;
    private static javax.swing.JTextField filterText;
    public javax.swing.JTextField fornavnProfilField1;
    public static javax.swing.JTable gpsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPasswordField passwordProfilField;
    private javax.swing.JTextField phonenumberProfil;
    private javax.swing.JLabel sauBondeLabel;
    private javax.swing.JLabel sauBondeLabelVariable;
    private javax.swing.JButton saveSheep;
    private static javax.swing.JTextField sheepAge;
    private static javax.swing.JTextField sheepName;
    private static javax.swing.JTextField sheepWeight;
    private javax.swing.JCheckBox simulereJBox;
    private javax.swing.JLabel sokBdayLabel;
    public static javax.swing.JLabel sokBdayLabelVariable;
    private static javax.swing.JButton sokEndreButton;
    private javax.swing.JLabel sokHealthLabel;
    public static javax.swing.JLabel sokHealthLabelVariable;
    private javax.swing.JLabel sokIDLabel;
    public static javax.swing.JLabel sokIDLabelVariable;
    private javax.swing.JLabel sokLatitudeLabel;
    public static javax.swing.JLabel sokLatitudeLabelVariable;
    private javax.swing.JLabel sokLongditudeLabel;
    public static javax.swing.JLabel sokLongditudeLabelVariable;
    private javax.swing.JLabel sokNameLabel;
    public static javax.swing.JLabel sokNameLabelVariable;
    private javax.swing.JLabel sokValgtSauLabel;
    private javax.swing.JButton sokVisKartButton;
    private javax.swing.JLabel sokWeightLabel;
    public static javax.swing.JLabel sokWeightLabelVariable;
    public static javax.swing.JTable tbl_sheep;
    private javax.swing.JButton updatePasswordButton;
    private javax.swing.JButton updateProfileButton1;
    public javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
